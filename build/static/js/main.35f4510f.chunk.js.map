{"version":3,"sources":["store/reducers/index.js","store/reducers/weather.js","store/constants/action-types.js","store/reducers/location.js","store/index.js","router/index.js","serviceWorker.js","helpers/Location.js","store/actions/index.js","middleware/async-request.js","api/index.js","components/WeatherCard.js","components/SelectLocation.js","pages/Home.js","pages/City.js","App.js","index.js"],"names":["combineReducers","weather","state","action","type","payload","location","store","createStore","RootReducer","composeWithDevTools","applyMiddleware","thunk","history","createBrowserHistory","Boolean","window","hostname","match","Location","Promise","resolve","reject","status","lat","lon","error","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","enableHighAccuracy","maximumAge","setWeather","storeAction","callback","params","dispatch","then","data","weatherServer","getWeatherByCoords","axios","get","getWeatherByID","id","WeatherCard","props","getLocationStatus","bind","getTempC","tempK","toFixed","model","this","WeatherCardModel","flag","Flag","name","country","toLowerCase","locationText","town","icon","loader","loading","className","Dimmer","active","inverted","Loader","size","loadingText","Image","src","Card","Content","Header","locationStatus","Meta","alt","temp","Description","Table","celled","striped","Body","Row","Cell","collapsing","windSpeed","windDeg","clouds","pressure","humidity","extra","description","Component","isNaN","Number","SelectLocation","cities","filteredCities","filter","selected","applyFilter","changeFilter","initCities","self","_","map","Cities","item","key","text","value","array","setState","searchBy","length","substring","slice","event","options","find","o","Dropdown","placeholder","fluid","search","selection","onSearchChange","e","currentTarget","onChange","setSelected","Button","color","content","labelPosition","onClick","onActivate","Home","weatherLoading","weatherLoaded","redirect","initHomePage","loadWeather","loadWeatherByCoords","saveCurrentLocation","currentLocation","getCurrent","catch","loadWeatherByID","WeatherCardObject","to","connect","request","setCurrentLocation","initWeather","App","path","component","City","withRouter","render","document","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.35f4510f.chunk.js","sourcesContent":["// import { SET_WEATHER, SET_CURRENT_LOCATION } from '../constants/action-types'\n//\n// const initialState = {\n//   weather: null,\n//   location: null\n// };\n//\n// function rootReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case SET_WEATHER: {\n//       return {\n//         ...state,\n//         weather: action.payload\n//       }\n//     }\n//     case SET_CURRENT_LOCATION: {\n//       return {\n//         ...state,\n//         location: action.payload\n//       }\n//     }\n//     default: {\n//       return state\n//     }\n//   }\n// }\n//\n// export default rootReducer;\nimport {combineReducers} from 'redux';\n\nimport weather from './weather'\nimport location from './location'\n\nexport default combineReducers({\n  weather,\n  location\n})\n","import { SET_WEATHER } from '../constants/action-types'\n\nconst initialState = null;\n\n\nexport default function weather(state = initialState, action) {\n  switch (action.type) {\n    case SET_WEATHER: {\n      return action.payload\n    }\n    default: {\n      return state\n    }\n  }\n};\n","export const SET_WEATHER = \"SET_WEATHER\";\nexport const SET_CURRENT_LOCATION = \"SET_CURRENT_LOCATION\";\n","import { SET_CURRENT_LOCATION } from '../constants/action-types'\n\nconst initialState = null;\n\nexport default function location(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_LOCATION: {\n      return action.payload\n\n    }\n    default: {\n      return state\n    }\n  }\n};\n","import { createStore, applyMiddleware } from 'redux'\nimport RootReducer from './reducers/index'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(RootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import {createBrowserHistory} from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","class Location {\n  static getCurrent() {\n    return new Promise((resolve, reject) => {\n      const options = {\n        enableHighAccuracy: true,\n        // timeout: 5000,\n        maximumAge: 0\n      };\n\n      const location = {\n        status: true,\n        lat: null,\n        lon: null\n      };\n\n      function success(position) {\n        location.status = true;\n        location.lat = position.coords.latitude;\n        location.lon = position.coords.longitude;\n        resolve(location)\n      }\n\n      function error() {\n        location.status = false;\n        location.lat = null;\n        location.lon = null;\n        reject(location)\n      }\n\n      if(!navigator.geolocation) {\n        error();\n      } else {\n        navigator.geolocation.getCurrentPosition(success, error, options);\n      }\n    })\n  }\n}\n\nexport default Location\n","import { SET_WEATHER, SET_CURRENT_LOCATION } from \"../constants/action-types\";\n\nexport function setWeather(payload = null) {\n  return {type: SET_WEATHER, payload}\n}\n\nexport function setCurrentLocation(payload = null) {\n  return {type: SET_CURRENT_LOCATION, payload}\n}\n","export default (storeAction, callback, ...params) => {\n  return function(dispatch) {\n    return callback(...params).then(data => dispatch(storeAction(data)))\n  }\n};\n","import axios from 'axios'\n\nconst weatherApiKey = '2148c5c17d3b2dba3cee165508ea3418';\nconst weatherServer = 'https://api.openweathermap.org/data/2.5/';\n\nexport function getWeatherByCoords(lat, lon) {\n  return axios.get(weatherServer + 'weather?lat=' + lat + '&lon=' + lon + '&appid=' + weatherApiKey).then((data) => {\n    return data.data;\n  })\n}\n\nexport function getWeatherByID(id) {\n  return axios.get(weatherServer + 'weather?id=' + id + '&appid=' + weatherApiKey).then((data) => {\n    return data.data;\n  })\n}\n\n","import React, {Component} from 'react';\nimport {Card, Dimmer, Flag, Loader, Table, Image} from 'semantic-ui-react';\n\nclass WeatherCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLocationStatus = this.getLocationStatus.bind(this);\n    this.getTempC = this.getTempC.bind(this);\n  }\n\n  getLocationStatus(status) {\n    switch (status) {\n      case true: {\n        return '';\n      }\n      case null: {\n        return 'Locating...';\n      }\n      case false: {\n        return 'Locating errored';\n      }\n      default: {\n        return '';\n      }\n    }\n  }\n\n  getTempC(tempK) {\n    return (tempK - 273.15).toFixed(2)\n  }\n\n  render() {\n    const model = this.props.model instanceof WeatherCardModel ? this.props.model : new WeatherCardModel();\n\n    let flag = <Flag name={model.country.toLowerCase()}/>;\n    let locationText = 'Weather in ' + model.town;\n    let icon = 'https://raw.githubusercontent.com/yuvraaaj/openweathermap-api-icons/master/icons/' + model.icon + '.png';\n\n    let loader = this.props.loading ? <div className='loader'>\n      <Dimmer active inverted>\n        <Loader size='large'>{this.props.loadingText}</Loader>\n      </Dimmer>\n\n      <Image src='https://react.semantic-ui.com/images/wireframe/paragraph.png' />\n    </div> : null;\n\n    return (\n    <Card>\n      {loader}\n      <Card.Content>\n        <Card.Header>\n          <div className='flex flex--space-between'>\n            <span className='m-0'>{locationText} {this.getLocationStatus(this.props.locationStatus)}</span>\n          </div>\n        </Card.Header>\n        <Card.Meta>\n          <span className='date'>{flag} {model.country}</span>\n        </Card.Meta>\n        <div className='flex flex--centered fs-30'>\n          <p>{model.weather}</p>\n        </div>\n        <div className='flex flex--centered p-10'>\n          <div className=\"weather-icon dimension-10 centered-in\">\n            <img className='dimension-5' src={icon} alt='weather icon'/>\n          </div>\n          <span className='fs-30 flex flex--centered m-l-10'>{this.getTempC(model.temp)} °C</span>\n        </div>\n        <Card.Description>\n          <Table celled striped>\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell collapsing>\n                  Wind\n                </Table.Cell>\n                <Table.Cell>\n                  <div>\n                    <p>Speed: {model.windSpeed} m/s</p>\n                    <p>Deg: {model.windDeg}°</p>\n                  </div>\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell collapsing>\n                  Cloudiness\n                </Table.Cell>\n                <Table.Cell>\n                  {model.clouds} %\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell collapsing>\n                  Pressure\n                </Table.Cell>\n                <Table.Cell>\n                  {model.pressure} hpa\n                </Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell collapsing>\n                  Humidity\n                </Table.Cell>\n                <Table.Cell>\n                  {model.humidity} %\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <p className='capitalize color-black'>{model.description}</p>\n      </Card.Content>\n    </Card>\n    );\n  }\n}\n\nclass WeatherCardModel {\n  constructor(\n      town = null,\n      country = null,\n      weather = null,\n      icon = null,\n      description = null,\n      temp = null,\n      pressure = null,\n      humidity = null,\n      windSpeed = null,\n      windDeg = null,\n      clouds = null\n  ) {\n    this.town = town ? town : '';\n    this.country = country ? country : '';\n    this.weather = weather ? weather : '';\n    this.icon = icon ? icon : '';\n    this.description = description ? description : '';\n    this.temp = temp || !isNaN(Number(temp)) ? temp : '';\n    this.pressure = pressure || !isNaN(Number(pressure)) ? pressure : '';\n    this.humidity = humidity || !isNaN(Number(humidity)) ? humidity : '';\n    this.windSpeed = windSpeed || !isNaN(Number(windSpeed)) ? windSpeed : '';\n    this.windDeg = windDeg || !isNaN(Number(windDeg)) ? windSpeed : '';\n    this.clouds = clouds || !isNaN(Number(clouds)) ? clouds : '';\n  }\n}\n\nexport {WeatherCard, WeatherCardModel};\n","import React, {Component} from 'react';\nimport _ from 'lodash'\nimport Cities from 'assets/data/city.list.json';\nimport {Button, Dropdown} from 'semantic-ui-react';\n\n\nclass SelectLocation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cities: [],\n      filteredCities: [],\n      filter: '',\n      selected: null\n    };\n\n    this.applyFilter = this.applyFilter.bind(this);\n    this.changeFilter = this.changeFilter.bind(this);\n    this.initCities = this.initCities.bind(this);\n  }\n\n  componentWillMount() {\n    this.initCities();\n  }\n\n  initCities() {\n    const self = this;\n    new Promise((resolve) => {\n      resolve(_.map(Cities, (item) => {\n        return {\n          key: item.id,\n          text: item.name,\n          value: item.name,\n          flag: item.country.toLowerCase()\n        }\n      }))\n    }).then((array) => {\n      self.setState({\n        cities: array\n      })\n    });\n  }\n\n  changeFilter(value) {\n    this.setState({filter: value});\n    this.applyFilter(value)\n  }\n\n  applyFilter(searchBy) {\n    this.setState({\n      filteredCities: searchBy.length > 0 ? _.filter(this.state.cities, (item) => item.text.substring(0, searchBy.length).toLowerCase() === searchBy.toLowerCase()).slice(0,150) : []\n    });\n  }\n\n  setSelected(event, data) {\n    const { value } = data;\n    const { key } = data.options.find(o => o.value === value);\n    this.setState({\n      selected: key\n    })\n  }\n\n  render() {\n    return (\n        <div className='city-select'>\n          <Dropdown\n              className='city-select__selector'\n              placeholder='Find city'\n              fluid\n              search\n              selection\n              options={this.state.filteredCities}\n              onSearchChange={(e) => this.changeFilter(e.currentTarget.value)}\n              onChange={this.setSelected.bind(this)}\n          />\n          <Button\n              className='city-select__submit'\n              color='orange'\n              content='Next'\n              icon='right arrow'\n              labelPosition='right'\n              onClick={() => this.props.onActivate(this.state.selected)}\n          />\n        </div>\n    );\n  }\n}\n\nexport default SelectLocation;\n","import React, {Component} from 'react';\nimport _ from 'lodash';\nimport Location from 'helpers/Location';\nimport {connect} from 'react-redux';\nimport {setWeather, setCurrentLocation} from 'actions';\nimport request from 'middleware/async-request';\nimport {getWeatherByCoords, getWeatherByID} from 'api';\n\nimport {WeatherCard, WeatherCardModel} from 'cmp/WeatherCard';\nimport SelectLocation from 'cmp/SelectLocation';\n\nimport {Redirect} from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      locationStatus: false,\n      weatherLoading: false,\n      weatherLoaded: false,\n      redirect: null,\n    };\n\n    this.initHomePage = this.initHomePage.bind(this);\n  }\n\n  componentDidMount() {\n    if (!this.state.weatherLoaded && this.state.locationStatus === false) {\n      this.initHomePage();\n    }\n  }\n\n  initHomePage() {\n    const loadWeather = (coords) => {\n      this.setState({locationStatus: true, weatherLoading: true});\n      this.props.loadWeatherByCoords(coords.lat, coords.lon).then(() => {\n        this.setState({weatherLoading: false, weatherLoaded: true});\n      });\n      this.props.saveCurrentLocation(coords.lat, coords.lon);\n    };\n\n    if (this.props.currentLocation) {\n      loadWeather(this.props.currentLocation)\n    } else {\n      Location.getCurrent().then((data) => {\n        loadWeather(data);\n      }).catch((error) => {\n        this.setState({locationStatus: null});\n      });\n    }\n  }\n\n  loadWeatherByID(id) {\n    this.setState({redirect: '/city/' + id});\n    if (!isNaN(id)) {\n      this.setState({weatherLoading: true});\n      this.props.loadWeatherByID(id).then(() => {\n        this.setState({weatherLoading: false, weatherLoaded: true});\n      });\n    }\n  }\n\n  render() {\n    let WeatherCardObject = null;\n\n    if (this.state.weatherLoaded) {\n      WeatherCardObject = new WeatherCardModel(\n          _.get(this.props.weather, 'name'),\n          _.get(this.props.weather, 'sys.country'),\n          _.get(this.props.weather, 'weather[0].main'),\n          _.get(this.props.weather, 'weather[0].icon'),\n          _.get(this.props.weather, 'weather[0].description'),\n          _.get(this.props.weather, 'main.temp'),\n          _.get(this.props.weather, 'main.pressure'),\n          _.get(this.props.weather, 'main.humidity'),\n          _.get(this.props.weather, 'wind.speed'),\n          _.get(this.props.weather, 'wind.deg'),\n          _.get(this.props.weather, 'clouds.all'),\n      );\n    }\n\n    const loadingText = this.state.locationStatus === false\n        ? 'Try to get location ...'\n        : this.state.locationStatus === null ? 'Allow showing of location ...' : this.state.weatherLoading ?\n                'Weather loading ...' : 'Couldn\\'t load weather ...';\n\n    const loading = (!this.state.locationStatus || this.state.weatherLoading)\n        && !this.state.weatherLoaded;\n\n    if (this.state.redirect) return <Redirect to={this.state.redirect}/>;\n\n    return (\n        <div className=\"App\">\n          <WeatherCard\n              model={WeatherCardObject}\n              loading={loading}\n              loadingText={loadingText}\n          />\n          <SelectLocation onActivate={this.loadWeatherByID.bind(this)}/>\n        </div>\n    );\n  }\n}\n\nexport default connect(\n    state => ({\n      weather: state.weather,\n      currentLocation: state.location\n    }),\n    dispatch => ({\n      loadWeatherByCoords: (lat, lon) => {\n        return dispatch(request(setWeather, getWeatherByCoords, lat, lon));\n      },\n      loadWeatherByID: (id) => {\n        return dispatch(request(setWeather, getWeatherByID, id));\n      },\n      saveCurrentLocation: (lat, lon) => {\n        dispatch(setCurrentLocation({lat, lon}));\n      },\n    }),\n)(Home);\n","import React, {Component} from 'react';\nimport _ from 'lodash';\nimport {connect} from 'react-redux';\nimport {setWeather} from 'actions';\nimport request from 'middleware/async-request';\nimport {getWeatherByID} from 'api';\n\nimport {WeatherCard, WeatherCardModel} from 'cmp/WeatherCard';\n\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weatherLoading: false,\n      weatherLoaded: false,\n    };\n\n    this.initWeather = this.initWeather.bind(this);\n  }\n\n  componentDidMount() {\n    this.initWeather();\n  }\n\n  initWeather() {\n    const id = this.props.match.params['id'];\n\n    if (!isNaN(id)) {\n      this.setState({weatherLoading: true});\n      this.props.loadWeatherByID(id).then(() => {\n        this.setState({weatherLoading: false, weatherLoaded: true});\n      });\n    }\n  }\n\n  render() {\n    let WeatherCardObject = null;\n\n    if (this.state.weatherLoaded) {\n      WeatherCardObject = new WeatherCardModel(\n          _.get(this.props.weather, 'name'),\n          _.get(this.props.weather, 'sys.country'),\n          _.get(this.props.weather, 'weather[0].main'),\n          _.get(this.props.weather, 'weather[0].icon'),\n          _.get(this.props.weather, 'weather[0].description'),\n          _.get(this.props.weather, 'main.temp'),\n          _.get(this.props.weather, 'main.pressure'),\n          _.get(this.props.weather, 'main.humidity'),\n          _.get(this.props.weather, 'wind.speed'),\n          _.get(this.props.weather, 'wind.deg'),\n          _.get(this.props.weather, 'clouds.all'),\n      );\n    }\n\n    const loadingText = this.state.weatherLoading ? 'Weather loading ...' : '';\n\n    const loading = this.state.weatherLoading && !this.state.weatherLoaded;\n\n    return (\n        <div className=\"App\">\n          <WeatherCard\n              model={WeatherCardObject}\n              loading={loading}\n              loadingText={loadingText}\n          />\n          <Link to='/'>\n            <span>Go back</span>\n          </Link>\n        </div>\n    );\n  }\n}\n\nexport default connect(\n    state => ({\n      weather: state.weather,\n    }),\n    dispatch => ({\n      loadWeatherByID: (id) => {\n        return dispatch(request(setWeather, getWeatherByID, id));\n      },\n    }),\n)(Home);\n","import React, { Component } from 'react';\n\nimport {\n  Route,\n  Switch,\n  withRouter\n} from \"react-router-dom\"\n\n\nimport Home from 'pages/Home';\nimport City from 'pages/City';\n\nclass App extends Component {\n  render() {\n    const { history } = this.props;\n\n    return (\n        <div className=\"App\">\n          <Switch>\n            <Route history={history} path='/city/:id' component={City} />\n            <Route history={history} path='/' component={Home} />\n          </Switch>\n        </div>\n    );\n  }\n}\n\nexport default withRouter(App)\n","import React from 'react';\nimport {render} from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {Router} from 'react-router-dom';\n\nimport store from 'store';\nimport history from 'router';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'styles/index.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nrender(\n    <Router history={history}>\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    </Router>,\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}